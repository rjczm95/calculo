# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IW8rWD-A-SbCvV9NQVuKwwf33c4fHzwG

## **Pregunta 2. Cuestionario Polinomios de Taylor**

$$f(x) = \sqrt{1+x} \ ; \ error (Rn(1))\le 0.001 \ ; \ x_0=1 \rightarrow f(x) = \sqrt{2}$$

$$P(x) = 1 + \frac{1}{2}x+\sum_{k=2}^n\frac{{(-1)}^{n-1} (2k-3)!!}{k! \ 2^k}\ x^{k}$$

$$Rn(n) = \frac{{(-1)}^{n-1}(2n-1)!!}{(n+1)! \ 2^{n+1}}\ {(1+c)}^{-n-\frac{1}{2}} \ x^{n+1}$$
"""

import math

def second_factorial (n):
  if n in (1,2):
    return n
  else:
    if n == 0:
      return 1
    else:
      return n * second_factorial(n-2)

def calculo_n (error):
  m = 2
  cota_error = (second_factorial(2*m-1))/(math.factorial(m+1)*2**(m+1))
  while (cota_error >= error):
    m = m+1
    cota_error = (second_factorial(2*m-1))/(math.factorial(m+1)*2**(m+1))
  return m
calculo_n(0.001)

import numpy as np
def pol_taylor (n):
  x=0.5
  grades = np.arange(1.,n+1,1.)
  aprox = 0
  for i in grades:
    aprox = aprox + (((-1)**(i-1))*(x**i))/i
  return aprox
  

print(pol_taylor(7.))

